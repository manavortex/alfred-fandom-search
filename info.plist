<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.manavortex.fandom</string>
	<key>connections</key>
	<dict>
		<key>A22A3B03-29F4-41DF-9FF8-A844DA2D18A4</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A7F2C6FD-53EC-43E6-9739-AFD2863AFE3F</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>copy to clipboard</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>CABB4C34-4B3F-4B6D-B5EF-96E3D293FACA</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>C7A29E7B-8D4F-41EE-A36B-5646031010D3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A7F2C6FD-53EC-43E6-9739-AFD2863AFE3F</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>copy URL to clipboard</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>CABB4C34-4B3F-4B6D-B5EF-96E3D293FACA</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>manavortex</string>
	<key>description</key>
	<string>Search a fandom wiki of your choice</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>fandom search</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>68</integer>
				<key>keyword</key>
				<string>fandom</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>2</integer>
				<key>queuemode</key>
				<integer>2</integer>
				<key>runningsubtext</key>
				<string>fetching data...</string>
				<key>script</key>
				<string>#!/usr/bin/python
# encoding: utf-8

import sys 
import requests 
import urllib3
from urllib import quote
from workflow import (Workflow3, ICON_INFO, ICON_WARNING, ICON_ERROR, ICON_WEB,
                      ICON_SETTINGS, ICON_SYNC)
from bs4 import BeautifulSoup

# change this to the name of the wiki you want to query, e.g. 'lyrics', 'witcher'...
DEFAULT_WIKI = ""


# do not change this
DEFAULT_URL = "https://%s.fandom.com/api/v1/Search/List"

class AlfredFandomSearch(object):
    """Workflow controller."""
    
    def __init__(self):
        self.wf = Workflow3(update_settings={'github_slug': 'manavortex/alfred-fandom-search'})

    def search(self):
        S = requests.Session()
        PARAMS = {
            "action": sys.argv[1],
            "format": "json",
            "limit": "10",
            "batches": "1",
            "minArticleQuality": "5", 
            "namespace": "0%2C14",
            "query": self.query
        }

        R = S.get(url=self.url, params=PARAMS)
        return R.json()["items"]

    def run(self, wf):
        """Run workflow."""
        
        args = self.wf.args # check for magic args
        
        if DEFAULT_WIKI == "": 
            self.wf.add_item(
                "Error: DEFAULT_URL in script filter not set", 
                subtitle="press enter to see readme", 
                arg="https://github.com/manavortex/alfred-fandom-search/blob/master/README.md", 
                valid=True
            )
            self.wf.send_feedback()
            return

        searchResults = {}
        try: 
            query = self.wf.decode(args[0])            
            self.query = quote(query)
            self.url = DEFAULT_URL % DEFAULT_WIKI
            searchResults = self.search()
        except IndexError: 
            searchResults = {}
        
        for result in searchResults:

            title=result["title"]
            soup = BeautifulSoup(result["snippet"])
            snipText = (soup.get_text()[:75] + "..")            
            subtitle=snipText
            
            url=result["url"]
            self.wf.add_item(
                title, 
                subtitle=subtitle,
                arg=url,                 
                valid=True
            )#, icon=header_image_url, icontype='path')
            
        self.wf.send_feedback()
        


if __name__ == '__main__':

    search = AlfredFandomSearch()
    sys.exit(search.run(search.wf.run))
</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>00_runme.py</string>
				<key>subtext</key>
				<string>search fandom wiki entries</string>
				<key>title</key>
				<string>&lt;query&gt;</string>
				<key>type</key>
				<integer>3</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>A22A3B03-29F4-41DF-9FF8-A844DA2D18A4</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<false/>
				<key>clipboardtext</key>
				<string>{query}</string>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>A7F2C6FD-53EC-43E6-9739-AFD2863AFE3F</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string>{query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>CABB4C34-4B3F-4B6D-B5EF-96E3D293FACA</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>68</integer>
				<key>keyword</key>
				<string>dragonage</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>2</integer>
				<key>queuemode</key>
				<integer>2</integer>
				<key>runningsubtext</key>
				<string>fetching data...</string>
				<key>script</key>
				<string>#!/usr/bin/python
# encoding: utf-8

import sys 
import requests 
import urllib3
import json
from urllib import quote
from workflow import (Workflow3, ICON_INFO, ICON_WARNING, ICON_ERROR, ICON_WEB,
                      ICON_SETTINGS, ICON_SYNC)
from bs4 import BeautifulSoup

# =================================================================================== #
# change this to the name of the wiki you want to query, e.g. 'lyrics', 'witcher'...
DEFAULT_WIKI = "dragonage"
# =================================================================================== #


# =================================================================================== #
# DO NOT CHANGE BELOW THIS LINE UNLESS YOU KNOW WHAT YOU'RE DOING :)
# =================================================================================== #
DEFAULT_URL = "https://%s.fandom.com/api/v1/Search/List"

class AlfredFandomSearch(object):
    """Workflow controller."""
    
    def __init__(self):
        self.wf = Workflow3(update_settings={'github_slug': 'manavortex/alfred-fandom-search'})

    def search(self):
        S = requests.Session()
        PARAMS = {
            "action": sys.argv[1],
            "format": "json",
            "limit": "10",
            "batches": "1",
            "minArticleQuality": "5", 
            "namespace": "0%2C14",
            "query": self.query
        }

        R = S.get(url=self.url, params=PARAMS)
        return R.json()["items"]

    def run(self, wf):
        """Run workflow."""
        
        args = self.wf.args # check for magic args
        
        if DEFAULT_WIKI == "": 
            self.wf.add_item(
                "Error: DEFAULT_URL in script filter not set", 
                subtitle="press enter to see readme", 
                arg="https://github.com/manavortex/alfred-fandom-search/blob/master/README.md", 
                valid=True
            )
            self.wf.send_feedback()
            return

        searchResults = {}
        try: 
            query = self.wf.decode(args[0])            
            self.query = quote(query)
            self.url = DEFAULT_URL % DEFAULT_WIKI
            searchResults = self.search()
        except IndexError: 
            searchResults = {}
        
        for result in searchResults:

            title=result["title"]
            soup = BeautifulSoup(result["snippet"])
            snipText = (soup.get_text()[:75] + "..")            
            subtitle=snipText
            
            url=result["url"]
            self.wf.add_item(
                title, 
                subtitle=subtitle,
                arg=url,                 
                valid=True
            )#, icon=header_image_url, icontype='path')
            
        self.wf.send_feedback()
        


if __name__ == '__main__':

    search = AlfredFandomSearch()
    sys.exit(search.run(search.wf.run))
</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>00_runme.py</string>
				<key>subtext</key>
				<string>search fandom wiki entries</string>
				<key>title</key>
				<string>&lt;query&gt;</string>
				<key>type</key>
				<integer>3</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>C7A29E7B-8D4F-41EE-A36B-5646031010D3</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
	</array>
	<key>readme</key>
	<string></string>
	<key>uidata</key>
	<dict>
		<key>A22A3B03-29F4-41DF-9FF8-A844DA2D18A4</key>
		<dict>
			<key>xpos</key>
			<integer>40</integer>
			<key>ypos</key>
			<integer>150</integer>
		</dict>
		<key>A7F2C6FD-53EC-43E6-9739-AFD2863AFE3F</key>
		<dict>
			<key>note</key>
			<string>copy URL to clipboard</string>
			<key>xpos</key>
			<integer>360</integer>
			<key>ypos</key>
			<integer>150</integer>
		</dict>
		<key>C7A29E7B-8D4F-41EE-A36B-5646031010D3</key>
		<dict>
			<key>xpos</key>
			<integer>40</integer>
			<key>ypos</key>
			<integer>300</integer>
		</dict>
		<key>CABB4C34-4B3F-4B6D-B5EF-96E3D293FACA</key>
		<dict>
			<key>note</key>
			<string>open URL in default browser</string>
			<key>xpos</key>
			<integer>360</integer>
			<key>ypos</key>
			<integer>300</integer>
		</dict>
	</dict>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>1.1.0</string>
	<key>webaddress</key>
	<string>https://www.github.com/manavortex/alfred-fandom-search</string>
</dict>
</plist>
